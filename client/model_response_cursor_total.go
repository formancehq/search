/*
Search API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: latest
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ResponseCursorTotal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseCursorTotal{}

// ResponseCursorTotal struct for ResponseCursorTotal
type ResponseCursorTotal struct {
	Value interface{} `json:"value,omitempty"`
	Relation interface{} `json:"relation,omitempty"`
}

// NewResponseCursorTotal instantiates a new ResponseCursorTotal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseCursorTotal() *ResponseCursorTotal {
	this := ResponseCursorTotal{}
	return &this
}

// NewResponseCursorTotalWithDefaults instantiates a new ResponseCursorTotal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseCursorTotalWithDefaults() *ResponseCursorTotal {
	this := ResponseCursorTotal{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResponseCursorTotal) GetValue() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseCursorTotal) GetValueOk() (*interface{}, bool) {
	if o == nil || isNil(o.Value) {
		return nil, false
	}
	return &o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ResponseCursorTotal) HasValue() bool {
	if o != nil && isNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given interface{} and assigns it to the Value field.
func (o *ResponseCursorTotal) SetValue(v interface{}) {
	o.Value = v
}

// GetRelation returns the Relation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResponseCursorTotal) GetRelation() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Relation
}

// GetRelationOk returns a tuple with the Relation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseCursorTotal) GetRelationOk() (*interface{}, bool) {
	if o == nil || isNil(o.Relation) {
		return nil, false
	}
	return &o.Relation, true
}

// HasRelation returns a boolean if a field has been set.
func (o *ResponseCursorTotal) HasRelation() bool {
	if o != nil && isNil(o.Relation) {
		return true
	}

	return false
}

// SetRelation gets a reference to the given interface{} and assigns it to the Relation field.
func (o *ResponseCursorTotal) SetRelation(v interface{}) {
	o.Relation = v
}

func (o ResponseCursorTotal) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseCursorTotal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.Relation != nil {
		toSerialize["relation"] = o.Relation
	}
	return toSerialize, nil
}

type NullableResponseCursorTotal struct {
	value *ResponseCursorTotal
	isSet bool
}

func (v NullableResponseCursorTotal) Get() *ResponseCursorTotal {
	return v.value
}

func (v *NullableResponseCursorTotal) Set(val *ResponseCursorTotal) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseCursorTotal) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseCursorTotal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseCursorTotal(val *ResponseCursorTotal) *NullableResponseCursorTotal {
	return &NullableResponseCursorTotal{value: val, isSet: true}
}

func (v NullableResponseCursorTotal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseCursorTotal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


